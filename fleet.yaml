apiVersion: "agones.dev/v1"
kind: Fleet
# Fleet Metadata
# https://v1-24.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#objectmeta-v1-meta
metadata:
  namespace: gameserver
  name: fleet
spec:
  # the number of GameServers to keep Ready or Allocated in this Fleet
  replicas: 1
  # defines how GameServers are organised across the cluster.
  # Options include:
  # "Packed" (default) is aimed at dynamic Kubernetes clusters, such as cloud providers, wherein we want to bin pack
  # resources
  # "Distributed" is aimed at static Kubernetes clusters, wherein we want to distribute resources across the entire
  # cluster
  scheduling: Packed
  # a GameServer template - see:
  # https://agones.dev/site/docs/reference/gameserver/ for all the options
  strategy:
    # The replacement strategy for when the GameServer template is changed. Default option is "RollingUpdate",
    # "RollingUpdate" will increment by maxSurge value on each iteration, while decrementing by maxUnavailable on each
    # iteration, until all GameServers have been switched from one version to another.
    # "Recreate" terminates all non-allocated GameServers, and starts up a new set with the new details to replace them.
    type: RollingUpdate
    # Only relevant when `type: RollingUpdate`
    rollingUpdate:
      # the amount to increment the new GameServers by. Defaults to 25%
      maxSurge: 25%
      # the amount to decrements GameServers by. Defaults to 25%
      maxUnavailable: 25%
  template:
    # GameServer metadata
    metadata:
      labels:
        foo: fleet
    # GameServer specification
      generateName: "server-"
    spec:
      players:
        # set this GameServer's initial player capacity to 10
        initialCapacity: 20
      ports:
      - name: default
        portPolicy: Dynamic
        containerPort: 7777
      health:
        initialDelaySeconds: 15
        periodSeconds: 30
      # Parameters for game server sidecar
      sdkServer:
        logLevel: Info
        grpcPort: 9357
        httpPort: 9358
      # The GameServer's Pod template
      template:
        spec:
          containers:
          - name: ageofroyal-server
            image: jausseran/ageofroyalserver:0.1
            resources:
              requests:
                memory: "4Gi"  # Request 4 GB of memory
                cpu: "2"       # Request 2 vCPUs
              limits:
                memory: "8Gi"  # Limit to 8 GB of memory
                cpu: "4"       # Limit to 4 vCPUs